install hashicorp terraform as per instructions in below article
https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli
https://www.itwonderlab.com/terraform-aws-ansible/

validate installation
-------------
terraform -help
terraform -help plan

After installtion, next we can test terraform with docker, awscli, proxmox, etc. let's install these one by one


test with docker enginer
------------------------


  
install aws cli
------------------
https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html

sudo apt list | grep awscli
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

artia@dell001:~$ which aws
/usr/local/bin/aws
artia@dell001:~$ aws --version
aws-cli/2.17.56 Python/3.12.6 Linux/6.8.0-45-generic exe/x86_64.ubuntu.24

Terraform installs providers from the Terraform Registry by default. In this example configuration, the aws provider's source is defined as hashicorp/aws, which is shorthand for registry.terraform.io/hashicorp/aws.

artia@dell001:~/learn-terraform/terraform_aws$ terraform init
Initializing the backend...
Initializing provider plugins...
- Finding hashicorp/aws versions matching "~> 4.16"...
- Installing hashicorp/aws v4.67.0...
- Installed hashicorp/aws v4.67.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.


Terraform for Proxmox
=======================
artia@dell001:~/learn-terraform/terraform_proxmox$ terraform init
Initializing the backend...
Initializing provider plugins...
- Finding telmate/proxmox versions matching ">= 1.0.0"...
- Installing telmate/proxmox v2.9.14...
- Installed telmate/proxmox v2.9.14 (self-signed, key ID A9EBBE091B35AFCE)
Partner and community providers are signed by their developers.
If you'd like to know more about provider signing, you can read about it here:
https://www.terraform.io/docs/cli/plugins/signing.html
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

terraform fmt
terraform validate
terraform apply
