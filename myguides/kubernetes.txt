
references: https://www.youtube.com/watch?v=hmkF77F9TLw&t=2747s

1) install kubectl using Install using native package management from https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
$ kubectl version --client
Client Version: v1.30.1
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3

2) install minikube (https://minikube.sigs.k8s.io/docs/start/)
agupta@hl001:/tmp$ minikube status
minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

3) minikube start
agupta@hl001:/tmp$ sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
agupta@hl001:/tmp$ minikube start
😄  minikube v1.33.1 on Ubuntu 22.04
✨  Automatically selected the kvm2 driver. Other choices: qemu2, none, ssh
💾  Downloading driver docker-machine-driver-kvm2:
    > docker-machine-driver-kvm2-...:  65 B / 65 B [---------] 100.00% ? p/s 0s
    > docker-machine-driver-kvm2-...:  13.46 MiB / 13.46 MiB  100.00% 381.98 Mi
💿  Downloading VM boot image ...
    > minikube-v1.33.1-amd64.iso....:  65 B / 65 B [---------] 100.00% ? p/s 0s
    > minikube-v1.33.1-amd64.iso:  314.16 MiB / 314.16 MiB  100.00% 74.36 MiB p
👍  Starting "minikube" primary control-plane node in "minikube" cluster
💾  Downloading Kubernetes v1.30.0 preload ...
    > preloaded-images-k8s-v18-v1...:  342.90 MiB / 342.90 MiB  100.00% 70.65 M
🔥  Creating kvm2 VM (CPUs=2, Memory=3900MB, Disk=20000MB) ...
🐳  Preparing Kubernetes v1.30.0 on Docker 26.0.2 ...
    ▪ Generating certificates and keys ...
    ▪ Booting up control plane ...
    ▪ Configuring RBAC rules ...
🔗  Configuring bridge CNI (Container Networking Interface) ...
🔎  Verifying Kubernetes components...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🌟  Enabled addons: storage-provisioner, default-storageclass
🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


4) agupta@hl001:/tmp$ kubectl get po -A
NAMESPACE     NAME                               READY   STATUS    RESTARTS      AGE
kube-system   coredns-7db6d8ff4d-vb9cp           1/1     Running   0             11m
kube-system   etcd-minikube                      1/1     Running   0             12m
kube-system   kube-apiserver-minikube            1/1     Running   0             11m
kube-system   kube-controller-manager-minikube   1/1     Running   2 (11m ago)   12m
kube-system   kube-proxy-rzzdn                   1/1     Running   0             11m
kube-system   kube-scheduler-minikube            1/1     Running   0             11m
kube-system   storage-provisioner                1/1     Running   0             11m
agupta@hl001:/tmp$ 


5) Install k9s from https://github.com/derailed/k9s/releases, by directly downloading .deb 
dpkg -i <>

6) python3 --version
7) $ mysql --version
mysql  Ver 8.0.36-0ubuntu0.22.04.1 for Linux on x86_64 ((Ubuntu))


8) while using flask-mysqldb, an issue envcountered (https://medium.com/@hangyulson1004/steps-to-integrate-mysql-with-flask-on-a-ubuntu-server-covers-subprocess-exited-with-error-a9a731f683b9)

9) export MYSQL_HOST="localhost"
